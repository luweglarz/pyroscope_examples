discovery.docker "all" {
  host = "unix:///var/run/docker.sock"
}

discovery.relabel "local_containers" {
  targets = discovery.docker.all.targets
  rule {
    action = "replace"
    source_labels = ["__meta_docker_container_name"]
    target_label = "service_name"
  }
}

pyroscope.ebpf "instance" {
  forward_to = [pyroscope.write.endpoint.receiver]
  targets = discovery.docker.all.targets
  demangle = "full"
  collect_user_profile = true
  collect_kernel_profile = true
  sample_rate = 200
}

discovery.process "all" {
  join = discovery.docker.all.targets
}

discovery.relabel "java" {
    targets = discovery.process.all.targets
    rule {
        source_labels = ["__meta_process_exe"]
        action = "keep"
        regex = ".*/java$"
    }
    rule {
        source_labels = ["__meta_process_commandline"]
        regex = "java PerformanceTest"
        action = "keep"
    }
    rule {
        action = "replace"
        target_label = "service_name"
        replacement = "java-performance-test"
    }
}

discovery.process "all2" {

}

discovery.relabel "alloy" {
    targets = discovery.process.all2.targets
    // Filter needed processes
    rule {
        source_labels = ["__meta_process_exe"]
        regex = ".*/alloy"
        action = "keep"
    }
}

pyroscope.ebpf "instance2" {
 forward_to     = [pyroscope.write.endpoint.receiver]
 targets = discovery.relabel.alloy.output
}

pyroscope.java "java" {
  profiling_config {
    interval = "15s"
    alloc = "512k"
    cpu = true
    lock = "10ms"
    sample_rate = 100
  }
  forward_to = [pyroscope.write.endpoint.receiver]
  targets = discovery.relabel.java.output
}

pyroscope.write "endpoint" {
  endpoint {
    url = "http://pyroscope:4040"
  }
}